@model ESchool.Models.Quiz
@{
    ViewData["Title"] = "Quiz" + Model.Name;
}


<h1>@Model.Name</h1>
<h4>Start: @Html.DisplayFor(e => e.Start)</h4>
<h4>Finish: @Html.DisplayFor(e => e.Finish)</h4>

@Html.ActionLink("Add question", "Add", "Questions", new {id = Model.Id}, new {@class = "btn btn-primary"})
<br>
<br>

@if (Model.Questions != null && Model.Questions.Any()) {

    <table class="table table-bordered table-hover">
    @foreach(var question in Model.Questions) {
        <tr>
            <td>@question.QuestionContent</td>
            <td>@Html.ActionLink("Edit", "Edit", "Questions", new {id = question.Id}, new {@class = "btn btn-dark"})</td>
        </tr>
    }
    </table>
    var playLink = Url.ActionLink("Play", "Quiz", new {id = Model.Questions.First().Id});
    <p>
        Podziel siÄ™ swoim quizem: <a href=@playLink>@playLink</a>
    </p>
} else {
    <p>There aren't any questions yet!</p>
}

@if (Model.Participants.Any()){
<h2>Scores:</h2>
<table class="table table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Email</th>
            <th scope="col">Points</th>
            <th scope="col">Percentage</th>
        </tr>
    </thead>
    <tbody>
        @{var index = 1;}
        @foreach(var participant in Model.Participants.OrderByDescending(p => p.Points)) {
            <tr>
            <th scope="row">@index</th>
            <td>@Html.ActionLink(participant.User.Email, "Score", "Quiz", new {id =participant.Id})</td>
            <td>@participant.Points</td>
            @{var percentage = Math.Round((double)(participant.Points) / Model.Questions.Count * 100, 2);}
            <td>@percentage</td>
            </tr>
            index++;
        }
    </tbody>
</table>
} else {
    <p>There aren't any participants yet.</p>
}

@Html.ActionLink("Remove this quiz", "Remove", "Quiz", new {id = Model.Id}, new {@class = "btn btn-danger"})